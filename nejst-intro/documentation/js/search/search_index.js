var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.127,1,1.906]],["body/controllers/AppController.html",[0,1.855,1,3.138,2,1.521,3,0.583,4,0.509,5,0.509,6,3.4,7,0.711,8,0.037,9,1.027,10,2.705,11,3.4,12,0.583,13,0.077,14,2.29,15,1.854,16,0.031,17,0.031]],["title/modules/AppModule.html",[18,1.127,19,1.906]],["body/modules/AppModule.html",[1,2.922,2,1.52,3,0.428,4,0.374,5,0.374,7,0.767,8,0.038,9,0.754,10,2.704,11,2.496,12,0.428,13,0.057,16,0.025,17,0.025,18,1.728,19,3.676,20,1.361,21,1.232,22,1.681,23,1.681,24,1.361,25,2.601,26,1.681,27,2.496,28,2.496,29,2.496,30,2.704,31,3.013,32,2.439,33,2.288,34,1.681,35,1.361,36,3.023,37,2.57,38,3.023,39,2.148,40,3.023,41,3.023]],["title/injectables/AppService.html",[10,1.523,42,1.127]],["body/injectables/AppService.html",[3,0.558,4,0.487,5,0.487,7,0.558,8,0.037,9,0.982,10,2.439,12,0.558,13,0.074,16,0.03,17,0.03,42,1.805,43,2.19,44,3.251,45,0.885,46,2.439,47,5.557,48,1.197,49,3.938,50,1.965,51,1.805,52,1.965,53,3.938,54,3.938,55,3.251]],["title/controllers/AuthController.html",[0,1.127,56,1.906]],["body/controllers/AuthController.html",[0,1.498,2,1.498,3,0.574,4,0.501,5,0.501,7,0.705,8,0.037,9,1.011,12,0.574,13,0.076,14,2.256,15,1.826,16,0.031,17,0.031,56,3.109,57,3.349,58,2.882,59,4.057,60,2.424,61,3.349,62,4.057]],["title/modules/AuthModule.html",[18,1.127,30,1.523]],["body/modules/AuthModule.html",[2,1.606,3,0.465,4,0.406,5,0.406,7,0.735,8,0.037,9,0.818,12,0.465,13,0.062,16,0.027,17,0.027,18,1.801,20,1.477,21,1.337,22,1.825,23,1.825,24,1.477,25,2.711,26,2.711,30,2.825,32,1.957,33,2.417,34,1.825,35,1.477,37,2.05,39,2.332,56,3.045,60,2.683,61,2.709,63,2.709,64,2.709,65,2.709,66,3.282,67,2.716,68,3.282]],["title/injectables/AuthService.html",[42,1.127,60,1.373]],["body/injectables/AuthService.html",[3,0.405,4,0.354,5,0.354,7,0.561,8,0.037,9,0.714,12,0.405,13,0.054,15,1.288,16,0.024,17,0.024,42,1.464,43,1.592,45,0.644,46,1.978,48,1.382,50,2.268,51,2.114,52,1.978,60,1.784,67,1.788,69,2.363,70,2.963,71,4.05,72,4.546,73,2.816,74,2.363,75,2.226,76,2.863,77,2.204,78,1.978,79,1.205,80,1.614,81,2.863,82,2.363,83,3.963,84,3.23,85,2.528,86,2.863,87,1.788,88,2.363,89,2.363,90,2.363,91,2.363,92,1.788,93,2.204,94,2.863,95,2.863,96,2.363,97,2.863,98,2.863,99,2.863,100,2.034]],["title/classes/CreatePostDto.html",[13,0.057,101,1.697]],["body/classes/CreatePostDto.html",[3,0.178,4,0.155,5,0.155,7,0.54,8,0.037,12,0.178,13,0.051,16,0.013,17,0.013,45,0.282,48,1.386,51,1.805,78,1.048,79,1.608,80,1.951,100,2.506,101,1.168,102,0.565,103,3.326,104,0.892,105,1.22,106,3.343,107,2.709,108,2.709,109,3.506,110,2.709,111,3.526,112,4.05,113,1.925,114,3.526,115,2.506,116,2.051,117,2.615,118,5.237,119,2.357,120,3.106,121,1.255,122,1.255,123,2.101,124,2.101,125,1.255,126,1.255,127,1.979,128,2.101,129,3.168,130,1.734,131,1.493,132,2.101,133,1.255,134,1.255,135,1.255,136,2.101,137,2.025,138,2.615,139,3.168,140,1.312,141,1.734,142,1.255,143,1.255,144,3.168,145,1.734,146,2.101,147,2.101,148,1.255,149,1.255,150,2.101,151,2.101,152,1.734,153,1.734,154,1.255,155,1.255,156,1.255,157,1.734,158,1.255,159,3.168,160,3.168,161,1.312,162,2.101,163,2.101,164,2.101,165,1.734,166,2.101,167,2.101,168,1.255,169,2.911,170,1.734,171,1.734,172,1.734,173,1.255,174,1.255,175,1.255,176,1.255,177,2.709,178,1.255,179,1.255,180,1.255,181,2.506,182,2.203,183,2.877,184,1.036,185,1.036,186,1.255,187,2.101,188,2.101,189,2.101,190,2.709,191,1.255,192,0.565,193,1.255,194,1.255,195,0.784,196,1.925,197,1.255,198,0.892,199,2.911,200,3.343,201,0.626,202,1.255,203,2.101,204,1.036,205,1.255,206,1.255,207,1.036,208,1.255,209,2.709,210,1.255,211,1.255,212,1.255,213,1.255,214,1.255,215,1.255,216,1.036,217,1.255,218,1.493,219,2.101,220,1.255,221,1.493,222,1.255]],["title/classes/CreatePostMetaOptionsDto.html",[13,0.057,127,1.906]],["body/classes/CreatePostMetaOptionsDto.html",[3,0.51,4,0.445,5,0.445,7,0.51,8,0.037,12,0.51,13,0.087,16,0.028,17,0.028,45,0.81,48,1.405,51,1.707,79,1.405,102,1.622,103,3.624,105,2.08,116,2.08,119,2.296,127,2.887,181,3.283,182,3.361,192,1.622,196,3.624,218,3.624,221,3.624,223,2.975,224,3.604,225,3.604,226,3.604]],["title/classes/CreateUserDto.html",[13,0.057,227,1.697]],["body/classes/CreateUserDto.html",[3,0.413,4,0.36,5,0.36,7,0.413,8,0.037,12,0.413,13,0.075,16,0.025,17,0.025,45,0.655,48,1.503,51,2.066,79,1.503,80,1.634,84,3.684,87,2.866,102,1.312,105,1.806,116,2.225,161,2.506,181,3.684,182,3.088,183,2.851,184,2.406,185,2.406,192,1.312,216,3.312,227,2.231,228,4.28,229,2.071,230,3.26,231,3.788,232,2.914,233,2.914,234,2.914,235,2.914,236,2.914,237,2.914,238,2.914,239,4.012,240,4.012,241,4.012,242,2.914,243,2.914,244,4.012,245,4.012,246,2.914,247,2.914]],["title/classes/GetUsersParamDto.html",[13,0.057,248,1.697]],["body/classes/GetUsersParamDto.html",[3,0.482,4,0.421,5,0.421,7,0.703,8,0.037,12,0.482,13,0.093,16,0.027,17,0.027,45,0.766,48,1.036,79,1.51,80,1.815,85,3.039,93,2.477,102,1.533,105,2.005,116,1.533,117,2.812,120,2.783,137,1.387,183,3.166,192,1.533,198,2.42,200,3.678,201,1.7,248,2.477,249,3.678,250,2.783,251,2.812,252,3.101,253,4.455,254,3.406,255,3.406,256,3.678,257,3.406]],["title/classes/PatchPostDto.html",[13,0.057,258,1.906]],["body/classes/PatchPostDto.html",[3,0.499,4,0.436,5,0.436,7,0.715,8,0.037,12,0.499,13,0.086,16,0.028,17,0.028,45,0.793,48,1.072,79,1.072,85,3.073,101,1.96,102,1.587,104,2.505,105,2.051,116,1.587,119,1.587,137,1.436,157,2.91,182,2.846,192,1.587,195,2.202,199,3.761,201,1.759,252,2.846,256,3.761,258,2.846,259,3.761,260,3.761,261,4.556,262,3.525,263,3.525,264,2.91,265,2.91]],["title/classes/PatchUserDto.html",[13,0.057,266,1.906]],["body/classes/PatchUserDto.html",[3,0.58,4,0.507,5,0.507,7,0.709,8,0.037,12,0.58,13,0.077,16,0.031,17,0.031,102,1.844,195,2.56,227,2.279,229,2.912,260,4.134,264,3.383,266,3.128,267,3.383,268,5.008,269,3.383,270,3.383,271,3.383]],["title/controllers/PostsController.html",[0,1.127,272,1.906]],["body/controllers/PostsController.html",[0,0.801,2,0.801,3,0.307,4,0.268,5,0.268,7,0.654,8,0.038,9,0.541,12,0.307,13,0.041,14,1.207,15,0.977,16,0.02,17,0.02,45,0.488,46,1.62,48,1.182,50,1.94,51,1.436,52,1.083,58,1.542,70,2.938,77,2.162,78,1.94,79,1.182,80,1.584,92,1.355,101,2.874,113,2.306,115,2.763,116,1.75,119,2.326,137,1.975,195,2.027,201,1.083,258,2.696,265,2.679,272,2.027,273,1.791,274,2.17,275,3.246,276,3.246,277,3.246,278,2.17,279,3.246,280,3.067,281,3.246,282,3.246,283,4.316,284,2.17,285,2.17,286,3.246,287,2.17,288,3.246,289,2.17,290,2.679,291,2.17,292,2.679,293,2.679,294,2.17,295,2.17,296,3.889,297,1.542,298,1.791,299,1.791,300,1.94,301,1.791,302,3.21,303,3.21,304,1.791,305,2.17,306,2.17,307,2.17,308,2.17,309,2.17,310,2.17,311,2.679,312,1.791,313,2.17,314,3.889,315,2.17,316,2.17,317,2.17,318,2.17,319,2.17]],["title/modules/PostsModule.html",[18,1.127,31,1.697]],["body/modules/PostsModule.html",[2,1.628,3,0.474,4,0.414,5,0.414,7,0.741,8,0.037,9,0.835,12,0.474,13,0.063,16,0.027,17,0.027,18,1.819,20,1.508,21,1.364,22,1.863,23,1.863,24,1.508,25,2.739,26,1.863,31,3.21,32,2.512,33,2.45,34,1.863,35,1.508,37,2.753,39,2.38,272,3.076,300,2.785,301,2.765,320,2.765,321,3.35,322,2.765,323,3.35,324,3.35]],["title/injectables/PostsService.html",[42,1.127,300,1.523]],["body/injectables/PostsService.html",[3,0.438,4,0.382,5,0.382,7,0.592,8,0.038,9,0.771,12,0.438,13,0.058,14,1.72,15,1.392,16,0.026,17,0.026,42,1.543,43,1.72,45,0.695,46,2.085,48,1.27,50,1.543,51,1.748,52,1.543,70,2.631,73,2.197,74,2.553,75,2.222,77,2.324,78,2.085,79,1.27,80,1.702,89,2.553,92,1.932,93,2.631,106,3.906,115,3.362,290,3.449,300,2.085,325,2.553,326,3.449,327,3.093,328,4.179,329,3.093,330,3.093,331,3.093,332,4.184,333,3.093,334,3.093]],["title/controllers/UsersController.html",[0,1.127,335,1.906]],["body/controllers/UsersController.html",[0,0.585,2,0.585,3,0.224,4,0.196,5,0.196,7,0.659,8,0.038,9,0.395,12,0.224,13,0.048,14,0.88,15,0.712,16,0.016,17,0.016,45,0.356,46,1.268,48,0.968,50,1.818,51,0.938,52,1.991,58,1.125,70,2.67,75,1.035,77,1.77,78,1.991,79,1.361,80,1.297,84,1.805,85,0.88,87,1.587,92,1.587,93,2.026,113,1.125,116,1.433,119,1.64,120,2.276,130,3.294,131,2.589,137,1.735,140,2.907,161,0.989,192,0.712,201,0.79,227,2.67,230,1.125,231,2.097,248,2.67,250,2.796,252,3.203,266,2.907,271,2.097,280,2.589,293,2.097,297,2.262,298,2.097,299,2.628,302,2.097,303,2.097,304,1.306,311,1.306,312,2.097,335,1.587,336,1.306,337,2.541,338,3.183,339,2.541,340,1.583,341,1.583,342,1.583,343,3.695,344,1.583,345,2.541,346,2.541,347,2.541,348,1.583,349,2.541,350,2.541,351,2.097,352,1.583,353,2.541,354,2.541,355,3.644,356,1.583,357,2.541,358,2.541,359,2.541,360,1.583,361,1.583,362,1.583,363,1.583,364,1.583,365,1.583,366,1.583,367,3.183,368,1.583,369,1.583,370,1.583,371,1.306,372,1.306,373,1.583,374,1.583,375,1.583,376,1.306,377,3.183,378,1.583,379,1.583,380,1.583,381,1.583,382,1.583,383,1.583,384,1.583,385,1.583,386,1.583,387,1.583,388,1.583,389,1.583,390,1.583,391,2.541,392,1.583,393,1.306,394,1.583,395,1.583,396,1.306,397,1.583,398,1.583,399,1.583,400,1.583,401,1.583,402,1.583,403,1.583,404,1.583,405,1.583,406,1.583]],["title/modules/UsersModule.html",[18,1.127,32,1.373]],["body/modules/UsersModule.html",[2,1.606,3,0.465,4,0.406,5,0.406,7,0.735,8,0.037,9,0.818,12,0.465,13,0.062,16,0.027,17,0.027,18,1.801,20,1.477,21,1.337,22,1.825,23,1.825,24,1.477,25,2.711,26,2.711,30,2.169,32,2.548,33,2.417,34,1.825,35,1.477,37,2.05,67,2.716,75,2.428,335,3.045,376,2.709,407,2.709,408,2.709,409,2.709,410,3.282,411,3.282,412,3.282]],["title/injectables/UsersService.html",[42,1.127,75,1.243]],["body/injectables/UsersService.html",[3,0.258,4,0.225,5,0.225,7,0.494,8,0.038,9,0.454,12,0.258,13,0.034,15,0.82,16,0.017,17,0.017,21,1.422,42,1.049,43,1.013,45,0.41,46,1.417,48,1.199,50,1.967,51,1.672,52,2.132,60,2.355,67,2.462,70,2.517,71,3.737,73,2.018,75,1.606,77,1.941,78,1.742,79,1.061,80,1.422,82,1.504,85,2.192,87,2.669,88,1.504,90,1.504,91,3.254,93,2.376,100,2.018,131,2.018,137,1.157,140,2.18,153,2.345,161,2.18,230,3.036,248,2.517,250,2.18,252,2.953,297,1.295,326,2.881,343,2.881,371,1.504,372,1.504,393,2.345,413,1.504,414,2.84,415,2.84,416,2.84,417,1.822,418,1.822,419,3.942,420,3.491,421,4.273,422,4.273,423,3.491,424,3.491,425,1.822,426,1.822,427,2.84,428,1.822,429,3.942,430,1.822,431,2.84,432,4.527,433,2.84,434,2.84,435,2.84,436,2.84,437,2.345,438,1.822,439,2.84,440,1.822,441,2.84,442,1.822,443,1.822,444,1.822]],["title/coverage.html",[445,2.942]],["body/coverage.html",[0,1.826,1,1.82,5,0.36,6,2.406,8,0.037,10,1.454,13,0.101,16,0.025,17,0.025,24,1.312,42,1.826,44,2.406,56,1.82,57,2.406,60,1.312,69,2.406,75,1.187,79,0.886,101,1.62,103,2.851,104,2.851,119,1.312,127,1.82,196,2.071,223,2.406,227,1.62,228,2.406,229,2.851,248,1.62,249,2.406,250,1.82,251,2.406,258,1.82,259,2.406,266,1.82,267,2.406,272,1.82,273,2.406,280,2.071,300,1.454,325,2.406,335,1.82,336,2.406,413,2.406,445,2.071,446,2.071,447,2.914,448,2.914,449,5.927,450,4.944,451,4.589,452,4.589,453,2.406,454,2.914,455,4.012,456,2.914,457,2.914,458,2.914,459,2.914,460,2.914,461,2.914]],["title/dependencies.html",[21,1.492,462,2.113]],["body/dependencies.html",[8,0.038,9,0.982,13,0.092,16,0.03,17,0.03,21,1.604,192,1.772,198,2.798,201,1.965,269,3.251,270,3.251,463,3.938,464,3.938,465,5.314,466,3.938,467,3.938,468,3.938,469,3.251,470,3.938,471,3.938,472,3.938,473,3.938,474,3.938,475,3.938,476,3.938,477,3.938]],["title/miscellaneous/enumerations.html",[478,1.599,479,3.024]],["body/miscellaneous/enumerations.html",[8,0.037,16,0.029,17,0.029,45,0.856,109,3.95,119,2.154,140,2.989,141,3.95,169,3.95,170,3.95,171,3.95,172,3.95,204,3.95,207,3.95,221,4.211,478,2.379,479,3.143,480,3.808,481,3.808,482,3.808,483,3.808]],["title/miscellaneous/functions.html",[478,1.599,484,3.024]],["body/miscellaneous/functions.html",[8,0.033,16,0.033,17,0.033,24,2.548,45,1.026,453,3.765,478,2.849,484,3.765,485,4.561]],["title/index.html",[45,0.576,486,2.113,487,2.113]],["body/index.html",[4,0.244,8,0.035,16,0.019,17,0.019,35,2.104,96,3.86,120,2.569,137,0.804,138,1.629,218,1.402,292,1.629,332,2.494,351,1.629,396,1.629,445,1.402,446,2.147,488,1.974,489,1.974,490,3.671,491,3.021,492,1.974,493,1.974,494,1.974,495,1.974,496,3.021,497,3.671,498,1.974,499,1.974,500,1.974,501,4.113,502,1.974,503,5.019,504,1.974,505,4.866,506,1.974,507,1.974,508,1.974,509,3.021,510,1.974,511,3.021,512,1.974,513,3.671,514,1.974,515,1.974,516,1.974,517,1.974,518,1.974,519,1.974,520,4.113,521,5.019,522,4.676,523,3.021,524,1.974,525,1.974,526,1.974,527,1.974,528,3.021,529,4.113,530,3.021,531,1.974,532,3.021,533,4.676,534,4.113,535,1.974,536,3.021,537,1.974,538,1.974,539,1.974,540,1.974,541,4.113,542,1.974,543,1.974,544,1.974,545,1.974,546,3.021,547,1.974,548,1.974,549,1.974,550,1.974,551,1.974,552,3.021,553,1.974,554,1.974,555,1.974,556,3.021,557,1.974,558,1.974,559,3.395,560,3.021,561,1.974,562,1.974,563,1.974,564,1.974,565,1.974,566,1.974,567,1.974,568,1.974,569,3.021,570,1.974,571,1.974,572,1.974,573,1.974,574,3.671,575,1.974,576,1.974,577,1.974,578,1.974,579,1.974,580,1.974,581,3.021,582,1.974,583,1.974,584,1.974,585,1.974,586,3.021,587,1.974,588,1.974,589,1.974,590,2.494,591,3.021,592,1.974,593,1.974,594,1.974,595,1.974,596,1.974,597,1.974,598,1.974,599,1.974,600,1.974,601,1.974,602,1.974,603,1.629,604,1.974,605,1.974,606,1.974,607,1.974,608,1.974,609,1.974,610,1.233]],["title/license.html",[486,2.113,487,2.113,610,1.599]],["body/license.html",[8,0.026,16,0.026,17,0.026,35,1.387,55,2.543,145,2.543,152,2.543,165,3.899,437,2.543,446,2.189,469,2.543,590,2.543,610,1.925,611,4.723,612,3.081,613,3.081,614,3.081,615,4.168,616,3.081,617,3.081,618,3.081,619,3.081,620,3.081,621,4.168,622,5.743,623,3.081,624,3.081,625,3.081,626,3.081,627,4.168,628,3.081,629,3.081,630,4.168,631,3.081,632,3.081,633,3.081,634,3.081,635,3.081,636,3.081,637,4.168,638,3.081,639,3.081,640,3.081,641,3.081,642,3.081,643,3.081,644,3.081,645,4.168,646,4.168,647,3.081,648,3.081,649,3.081,650,3.081,651,3.081,652,3.081,653,3.081,654,3.081,655,3.081,656,3.081,657,3.081,658,3.081,659,3.081,660,3.081,661,3.081,662,3.081,663,3.081,664,3.081,665,3.081,666,3.081,667,3.081,668,3.081,669,3.081,670,3.081,671,3.081,672,3.081,673,3.081,674,3.081]],["title/modules.html",[20,1.864]],["body/modules.html",[8,0.032,16,0.032,17,0.032,19,2.654,20,1.912,30,2.12,31,2.363,32,1.912,559,4.708,675,5.704,676,5.704,677,5.704]],["title/overview.html",[678,3.418]],["body/overview.html",[2,1.147,8,0.036,10,2.366,16,0.026,17,0.026,18,1.147,19,3.632,20,1.397,21,1.265,22,1.726,23,1.726,24,1.397,25,1.726,26,1.726,27,2.563,28,2.563,29,2.563,30,2.725,31,3.104,32,2.513,33,2.33,34,1.726,35,1.397,43,1.726,60,2.513,63,2.563,64,2.563,65,2.563,75,2.274,102,1.397,300,2.366,320,2.563,322,2.563,407,2.563,408,2.563,409,2.563,678,2.563,679,4.742,680,3.105]],["title/properties.html",[105,1.649,462,2.113]],["body/properties.html",[8,0.037,16,0.033,17,0.033,105,2.019,137,1.827,603,3.702,610,2.801,681,4.485,682,4.485,683,4.485]]],"invertedIndex":[["",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["0",{"_index":449,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":682,"title":{},"body":{"properties.html":{}}}],["0.14.1",{"_index":472,"title":{},"body":{"dependencies.html":{}}}],["0.2.0",{"_index":475,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":471,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":450,"title":{},"body":{"coverage.html":{}}}],["0/11",{"_index":456,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":451,"title":{},"body":{"coverage.html":{}}}],["0/3",{"_index":455,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":452,"title":{},"body":{"coverage.html":{}}}],["0/5",{"_index":457,"title":{},"body":{"coverage.html":{}}}],["01",{"_index":147,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["01t00:00:00.000z",{"_index":212,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["01t00:00:00.000z'})@isoptional()@isiso8601",{"_index":148,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["1",{"_index":359,"title":{},"body":{"controllers/UsersController.html":{}}}],["1.1.23",{"_index":464,"title":{},"body":{"dependencies.html":{}}}],["10",{"_index":383,"title":{},"body":{"controllers/UsersController.html":{}}}],["10.0.0",{"_index":465,"title":{},"body":{"dependencies.html":{}}}],["10})@apiquery({name",{"_index":356,"title":{},"body":{"controllers/UsersController.html":{}}}],["12",{"_index":444,"title":{},"body":{"injectables/UsersService.html":{}}}],["1234",{"_index":257,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["1234})@isoptional()@isint()@type(undefined",{"_index":254,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["2.0.5",{"_index":467,"title":{},"body":{"dependencies.html":{}}}],["200",{"_index":293,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["201",{"_index":282,"title":{},"body":{"controllers/PostsController.html":{}}}],["2022",{"_index":146,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["2024",{"_index":613,"title":{},"body":{"license.html":{}}}],["3/5",{"_index":459,"title":{},"body":{"coverage.html":{}}}],["4",{"_index":679,"title":{},"body":{"overview.html":{}}}],["6",{"_index":680,"title":{},"body":{"overview.html":{}}}],["60",{"_index":458,"title":{},"body":{"coverage.html":{}}}],["7.3.0",{"_index":470,"title":{},"body":{"dependencies.html":{}}}],["7.8.1",{"_index":477,"title":{},"body":{"dependencies.html":{}}}],["9",{"_index":160,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["above",{"_index":644,"title":{},"body":{"license.html":{}}}],["action",{"_index":669,"title":{},"body":{"license.html":{}}}],["allowing",{"_index":547,"title":{},"body":{"index.html":{}}}],["allusers",{"_index":391,"title":{},"body":{"controllers/UsersController.html":{}}}],["amazing",{"_index":596,"title":{},"body":{"index.html":{}}}],["and/or",{"_index":635,"title":{},"body":{"license.html":{}}}],["apioperation",{"_index":302,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apioperation({summary",{"_index":279,"title":{},"body":{"controllers/PostsController.html":{}}}],["apiproperty",{"_index":199,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{}}}],["apiproperty({description",{"_index":157,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{}}}],["apiproperty({enum",{"_index":136,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apipropertyoptional",{"_index":200,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional({description",{"_index":117,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{}}}],["apipropertyoptional({type",{"_index":128,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["apiquery",{"_index":377,"title":{},"body":{"controllers/UsersController.html":{}}}],["apiresponse",{"_index":303,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags",{"_index":304,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["apitags('posts",{"_index":308,"title":{},"body":{"controllers/PostsController.html":{}}}],["apitags('users",{"_index":379,"title":{},"body":{"controllers/UsersController.html":{}}}],["app.controller",{"_index":38,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["application",{"_index":522,"title":{},"body":{"index.html":{}}}],["applications",{"_index":496,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":19,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":10,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["arising",{"_index":672,"title":{},"body":{"license.html":{}}}],["array",{"_index":129,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["associated",{"_index":623,"title":{},"body":{"license.html":{}}}],["auth",{"_index":59,"title":{},"body":{"controllers/AuthController.html":{}}}],["auth.controller",{"_index":68,"title":{},"body":{"modules/AuthModule.html":{}}}],["auth/auth.module",{"_index":41,"title":{},"body":{"modules/AppModule.html":{}}}],["authcontroller",{"_index":56,"title":{"controllers/AuthController.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"coverage.html":{}}}],["authenticated",{"_index":432,"title":{},"body":{"injectables/UsersService.html":{}}}],["authentication",{"_index":420,"title":{},"body":{"injectables/UsersService.html":{}}}],["authmodule",{"_index":30,"title":{"modules/AuthModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["author",{"_index":603,"title":{},"body":{"index.html":{},"properties.html":{}}}],["authors",{"_index":662,"title":{},"body":{"license.html":{}}}],["authservice",{"_index":60,"title":{"injectables/AuthService.html":{}},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["authservice's",{"_index":435,"title":{},"body":{"injectables/UsersService.html":{}}}],["avoid",{"_index":423,"title":{},"body":{"injectables/UsersService.html":{}}}],["aws",{"_index":536,"title":{},"body":{"index.html":{}}}],["backers",{"_index":597,"title":{},"body":{"index.html":{}}}],["based",{"_index":351,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["blog",{"_index":118,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["board",{"_index":589,"title":{},"body":{"index.html":{}}}],["body",{"_index":298,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["boolean",{"_index":82,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["bootstrap",{"_index":24,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"coverage.html":{},"miscellaneous/functions.html":{},"overview.html":{}}}],["browse",{"_index":677,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":675,"title":{},"body":{"modules.html":{}}}],["building",{"_index":491,"title":{},"body":{"index.html":{}}}],["business",{"_index":414,"title":{},"body":{"injectables/UsersService.html":{}}}],["c",{"_index":612,"title":{},"body":{"license.html":{}}}],["call",{"_index":434,"title":{},"body":{"injectables/UsersService.html":{}}}],["channel",{"_index":562,"title":{},"body":{"index.html":{}}}],["charge",{"_index":619,"title":{},"body":{"license.html":{}}}],["check",{"_index":96,"title":{},"body":{"injectables/AuthService.html":{},"index.html":{}}}],["checks",{"_index":421,"title":{},"body":{"injectables/UsersService.html":{}}}],["circular",{"_index":424,"title":{},"body":{"injectables/UsersService.html":{}}}],["claim",{"_index":665,"title":{},"body":{"license.html":{}}}],["class",{"_index":13,"title":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":102,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"overview.html":{}}}],["clicks",{"_index":546,"title":{},"body":{"index.html":{}}}],["cloud",{"_index":531,"title":{},"body":{"index.html":{}}}],["cluster_appmodule",{"_index":27,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":29,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":28,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_authmodule",{"_index":63,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_exports",{"_index":64,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_authmodule_providers",{"_index":65,"title":{},"body":{"modules/AuthModule.html":{},"overview.html":{}}}],["cluster_postsmodule",{"_index":320,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_postsmodule_imports",{"_index":321,"title":{},"body":{"modules/PostsModule.html":{}}}],["cluster_postsmodule_providers",{"_index":322,"title":{},"body":{"modules/PostsModule.html":{},"overview.html":{}}}],["cluster_usersmodule",{"_index":407,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_exports",{"_index":409,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["cluster_usersmodule_providers",{"_index":408,"title":{},"body":{"modules/UsersModule.html":{},"overview.html":{}}}],["come",{"_index":553,"title":{},"body":{"index.html":{}}}],["compodoc/compodoc",{"_index":463,"title":{},"body":{"dependencies.html":{}}}],["conditions",{"_index":643,"title":{},"body":{"license.html":{}}}],["connection",{"_index":673,"title":{},"body":{"license.html":{}}}],["console.log('body",{"_index":401,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log('patchpostsdto",{"_index":319,"title":{},"body":{"controllers/PostsController.html":{}}}],["console.log('postdto",{"_index":314,"title":{},"body":{"controllers/PostsController.html":{}}}],["console.log('query",{"_index":390,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log('type",{"_index":388,"title":{},"body":{"controllers/UsersController.html":{}}}],["console.log('userid",{"_index":331,"title":{},"body":{"injectables/PostsService.html":{}}}],["console.log(firstname",{"_index":402,"title":{},"body":{"controllers/UsersController.html":{}}}],["const",{"_index":92,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["constructor",{"_index":73,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["constructor(authservice",{"_index":417,"title":{},"body":{"injectables/UsersService.html":{}}}],["constructor(private",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{}}}],["constructor(usersservice",{"_index":74,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["containing",{"_index":395,"title":{},"body":{"controllers/UsersController.html":{}}}],["contenct2",{"_index":334,"title":{},"body":{"injectables/PostsService.html":{}}}],["content",{"_index":106,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/PostsService.html":{}}}],["context",{"_index":150,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["contract",{"_index":670,"title":{},"body":{"license.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["controller('auth",{"_index":62,"title":{},"body":{"controllers/AuthController.html":{}}}],["controller('posts",{"_index":307,"title":{},"body":{"controllers/PostsController.html":{}}}],["controller('users",{"_index":378,"title":{},"body":{"controllers/UsersController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["copies",{"_index":637,"title":{},"body":{"license.html":{}}}],["copy",{"_index":621,"title":{},"body":{"license.html":{}}}],["copyright",{"_index":611,"title":{},"body":{"license.html":{}}}],["courses",{"_index":568,"title":{},"body":{"index.html":{}}}],["coverage",{"_index":445,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":195,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{}}}],["created",{"_index":312,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["created.'})@post",{"_index":284,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost",{"_index":275,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(@body",{"_index":313,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpost(createpostdto",{"_index":278,"title":{},"body":{"controllers/PostsController.html":{}}}],["createpostdto",{"_index":101,"title":{"classes/CreatePostDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["createpostmetaoptionsdto",{"_index":127,"title":{"classes/CreatePostMetaOptionsDto.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["creates",{"_index":393,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["createuserdto",{"_index":227,"title":{"classes/CreateUserDto.html":{}},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["createusers",{"_index":337,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusers(@body",{"_index":400,"title":{},"body":{"controllers/UsersController.html":{}}}],["createusers(createuserdto",{"_index":340,"title":{},"body":{"controllers/UsersController.html":{}}}],["current",{"_index":431,"title":{},"body":{"injectables/UsersService.html":{}}}],["damages",{"_index":666,"title":{},"body":{"license.html":{}}}],["date",{"_index":144,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["db",{"_index":98,"title":{},"body":{"injectables/AuthService.html":{}}}],["deal",{"_index":625,"title":{},"body":{"license.html":{}}}],["dealings",{"_index":674,"title":{},"body":{"license.html":{}}}],["declarations",{"_index":23,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["decorators",{"_index":116,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["deeper",{"_index":564,"title":{},"body":{"index.html":{}}}],["defaultvaluepipe",{"_index":368,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(1",{"_index":387,"title":{},"body":{"controllers/UsersController.html":{}}}],["defaultvaluepipe(10",{"_index":385,"title":{},"body":{"controllers/UsersController.html":{}}}],["defined",{"_index":48,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["delegating",{"_index":433,"title":{},"body":{"injectables/UsersService.html":{}}}],["delete",{"_index":364,"title":{},"body":{"controllers/UsersController.html":{}}}],["dependencies",{"_index":21,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{},"overview.html":{}}}],["deploy",{"_index":520,"title":{},"body":{"index.html":{}}}],["deploying",{"_index":535,"title":{},"body":{"index.html":{}}}],["deployment",{"_index":528,"title":{},"body":{"index.html":{}}}],["deploywith",{"_index":545,"title":{},"body":{"index.html":{}}}],["desc",{"_index":315,"title":{},"body":{"controllers/PostsController.html":{}}}],["description",{"_index":137,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":506,"title":{},"body":{"index.html":{}}}],["devtools",{"_index":576,"title":{},"body":{"index.html":{}}}],["discord",{"_index":561,"title":{},"body":{"index.html":{}}}],["distribute",{"_index":633,"title":{},"body":{"license.html":{}}}],["dive",{"_index":563,"title":{},"body":{"index.html":{}}}],["docs",{"_index":382,"title":{},"body":{"controllers/UsersController.html":{}}}],["docs'})@apiresponse({status",{"_index":348,"title":{},"body":{"controllers/UsersController.html":{}}}],["documentation",{"_index":446,"title":{},"body":{"coverage.html":{},"index.html":{},"license.html":{}}}],["doe",{"_index":154,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["doe\"\\r\\n",{"_index":210,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["draft",{"_index":170,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["dto",{"_index":394,"title":{},"body":{"controllers/UsersController.html":{}}}],["dto/create",{"_index":305,"title":{},"body":{"controllers/PostsController.html":{}}}],["dto/patch",{"_index":306,"title":{},"body":{"controllers/PostsController.html":{}}}],["dtos/create",{"_index":370,"title":{},"body":{"controllers/UsersController.html":{}}}],["dtos/get",{"_index":371,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["dtos/patch",{"_index":375,"title":{},"body":{"controllers/UsersController.html":{}}}],["e2e",{"_index":515,"title":{},"body":{"index.html":{}}}],["each",{"_index":177,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["efficient",{"_index":492,"title":{},"body":{"index.html":{}}}],["efficiently",{"_index":527,"title":{},"body":{"index.html":{}}}],["email",{"_index":87,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["endpiint",{"_index":405,"title":{},"body":{"controllers/UsersController.html":{}}}],["ensure",{"_index":525,"title":{},"body":{"index.html":{}}}],["enterprise",{"_index":580,"title":{},"body":{"index.html":{}}}],["entries",{"_index":353,"title":{},"body":{"controllers/UsersController.html":{}}}],["enum",{"_index":203,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enumerations",{"_index":479,"title":{"miscellaneous/enumerations.html":{}},"body":{"miscellaneous/enumerations.html":{}}}],["enums/poststatus.enum",{"_index":194,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["enums/posttype.enum",{"_index":193,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["error",{"_index":399,"title":{},"body":{"controllers/UsersController.html":{}}}],["event",{"_index":661,"title":{},"body":{"license.html":{}}}],["example",{"_index":120,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"index.html":{}}}],["exists",{"_index":97,"title":{},"body":{"injectables/AuthService.html":{}}}],["experience",{"_index":566,"title":{},"body":{"index.html":{}}}],["export",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["exports",{"_index":26,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["express",{"_index":469,"title":{},"body":{"dependencies.html":{},"license.html":{}}}],["extends",{"_index":260,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["false",{"_index":131,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["fast",{"_index":539,"title":{},"body":{"index.html":{}}}],["featured",{"_index":123,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["featuredimageurl",{"_index":107,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["features",{"_index":549,"title":{},"body":{"index.html":{}}}],["fetched",{"_index":349,"title":{},"body":{"controllers/UsersController.html":{}}}],["fetches",{"_index":345,"title":{},"body":{"controllers/UsersController.html":{}}}],["few",{"_index":541,"title":{},"body":{"index.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["files",{"_index":624,"title":{},"body":{"license.html":{}}}],["findall",{"_index":326,"title":{},"body":{"injectables/PostsService.html":{},"injectables/UsersService.html":{}}}],["findall(getusersparamdto",{"_index":425,"title":{},"body":{"injectables/UsersService.html":{}}}],["findall(userid",{"_index":328,"title":{},"body":{"injectables/PostsService.html":{}}}],["findbyid",{"_index":416,"title":{},"body":{"injectables/UsersService.html":{}}}],["findbyid(id",{"_index":427,"title":{},"body":{"injectables/UsersService.html":{}}}],["firstname",{"_index":230,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["fitness",{"_index":657,"title":{},"body":{"license.html":{}}}],["focus",{"_index":548,"title":{},"body":{"index.html":{}}}],["follow",{"_index":583,"title":{},"body":{"index.html":{}}}],["following",{"_index":642,"title":{},"body":{"license.html":{}}}],["forwardref",{"_index":67,"title":{},"body":{"modules/AuthModule.html":{},"injectables/AuthService.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["framework",{"_index":490,"title":{},"body":{"index.html":{}}}],["free",{"_index":618,"title":{},"body":{"license.html":{}}}],["full",{"_index":579,"title":{},"body":{"index.html":{}}}],["function",{"_index":454,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":484,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["furnished",{"_index":640,"title":{},"body":{"license.html":{}}}],["g",{"_index":544,"title":{},"body":{"index.html":{}}}],["get('/:id",{"_index":381,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:id?')@apioperation({summary",{"_index":344,"title":{},"body":{"controllers/UsersController.html":{}}}],["get('/:userid",{"_index":288,"title":{},"body":{"controllers/PostsController.html":{}}}],["gethello",{"_index":47,"title":{},"body":{"injectables/AppService.html":{}}}],["getposts",{"_index":276,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(@param('userid",{"_index":309,"title":{},"body":{"controllers/PostsController.html":{}}}],["getposts(userid",{"_index":287,"title":{},"body":{"controllers/PostsController.html":{}}}],["getting",{"_index":486,"title":{"index.html":{},"license.html":{}},"body":{}}],["getusers",{"_index":338,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusers(getusersparamdto",{"_index":342,"title":{},"body":{"controllers/UsersController.html":{}}}],["getusersparamdto",{"_index":248,"title":{"classes/GetUsersParamDto.html":{}},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["granted",{"_index":617,"title":{},"body":{"license.html":{}}}],["graph",{"_index":571,"title":{},"body":{"index.html":{}}}],["grow",{"_index":593,"title":{},"body":{"index.html":{}}}],["hands",{"_index":565,"title":{},"body":{"index.html":{}}}],["handy",{"_index":554,"title":{},"body":{"index.html":{}}}],["headers",{"_index":365,"title":{},"body":{"controllers/UsersController.html":{}}}],["hello",{"_index":53,"title":{},"body":{"injectables/AppService.html":{}}}],["help",{"_index":569,"title":{},"body":{"index.html":{}}}],["here",{"_index":601,"title":{},"body":{"index.html":{}}}],["hereby",{"_index":616,"title":{},"body":{"license.html":{}}}],["holders",{"_index":663,"title":{},"body":{"license.html":{}}}],["http",{"_index":373,"title":{},"body":{"controllers/UsersController.html":{}}}],["https://example.com/image.png",{"_index":211,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["https://example.com/image.png'})@isoptional()@isurl",{"_index":125,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["https://nestjs.com",{"_index":607,"title":{},"body":{"index.html":{}}}],["https://schema.org",{"_index":151,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["id",{"_index":85,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["identifier",{"_index":447,"title":{},"body":{"coverage.html":{}}}],["image",{"_index":124,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["implied",{"_index":653,"title":{},"body":{"license.html":{}}}],["import",{"_index":7,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["imports",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}}}],["included",{"_index":647,"title":{},"body":{"license.html":{}}}],["including",{"_index":627,"title":{},"body":{"license.html":{}}}],["index",{"_index":45,"title":{"index.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["indicating",{"_index":397,"title":{},"body":{"controllers/UsersController.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{}}}],["information",{"_index":396,"title":{},"body":{"controllers/UsersController.html":{},"index.html":{}}}],["infrastructure",{"_index":551,"title":{},"body":{"index.html":{}}}],["inject",{"_index":88,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["inject(forwardref",{"_index":90,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["injectable",{"_index":42,"title":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{}},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["injectables",{"_index":43,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"injectables/PostsService.html":{},"injectables/UsersService.html":{},"overview.html":{}}}],["install",{"_index":543,"title":{},"body":{"index.html":{}}}],["installcompile",{"_index":504,"title":{},"body":{"index.html":{}}}],["instance",{"_index":419,"title":{},"body":{"injectables/UsersService.html":{}}}],["instanceof",{"_index":389,"title":{},"body":{"controllers/UsersController.html":{}}}],["interact",{"_index":572,"title":{},"body":{"index.html":{}}}],["ip",{"_index":366,"title":{},"body":{"controllers/UsersController.html":{}}}],["isarray",{"_index":190,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isauth",{"_index":71,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["isemail",{"_index":244,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isenum",{"_index":186,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(poststatus",{"_index":208,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isenum(posttype",{"_index":205,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isinstance",{"_index":374,"title":{},"body":{"controllers/UsersController.html":{}}}],["isint",{"_index":256,"title":{},"body":{"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{}}}],["isiso8601",{"_index":189,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isjson",{"_index":187,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isnotempty",{"_index":182,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/PatchPostDto.html":{}}}],["isoptional",{"_index":183,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{}}}],["isoptional()@isjson",{"_index":155,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["isstring",{"_index":181,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty",{"_index":224,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["isstring()@isnotempty()@isemail",{"_index":232,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@minlength(3)@maxlength(96",{"_index":234,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isnotempty()@minlength(8)@matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":238,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isstring()@isoptional()@minlength(3)@maxlength(96",{"_index":236,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["isurl",{"_index":188,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["items",{"_index":132,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["jane",{"_index":442,"title":{},"body":{"injectables/UsersService.html":{}}}],["jane@doe.com",{"_index":443,"title":{},"body":{"injectables/UsersService.html":{}}}],["job",{"_index":586,"title":{},"body":{"index.html":{}}}],["jobs",{"_index":588,"title":{},"body":{"index.html":{}}}],["john",{"_index":153,"title":{},"body":{"classes/CreatePostDto.html":{},"injectables/UsersService.html":{}}}],["john@doe.com",{"_index":441,"title":{},"body":{"injectables/UsersService.html":{}}}],["join",{"_index":599,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":604,"title":{},"body":{"index.html":{}}}],["key",{"_index":218,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"index.html":{}}}],["kind",{"_index":652,"title":{},"body":{"license.html":{}}}],["lastname",{"_index":231,"title":{},"body":{"classes/CreateUserDto.html":{},"controllers/UsersController.html":{}}}],["learn",{"_index":557,"title":{},"body":{"index.html":{}}}],["legend",{"_index":22,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["letters",{"_index":163,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["liability",{"_index":667,"title":{},"body":{"license.html":{}}}],["liable",{"_index":664,"title":{},"body":{"license.html":{}}}],["license",{"_index":610,"title":{"license.html":{}},"body":{"index.html":{},"license.html":{},"properties.html":{}}}],["licensed",{"_index":591,"title":{},"body":{"index.html":{}}}],["limit",{"_index":343,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["limitation",{"_index":628,"title":{},"body":{"license.html":{}}}],["limited",{"_index":654,"title":{},"body":{"license.html":{}}}],["linkedin",{"_index":585,"title":{},"body":{"index.html":{}}}],["list",{"_index":346,"title":{},"body":{"controllers/UsersController.html":{}}}],["logic",{"_index":415,"title":{},"body":{"injectables/UsersService.html":{}}}],["login",{"_index":72,"title":{},"body":{"injectables/AuthService.html":{}}}],["login(email",{"_index":83,"title":{},"body":{"injectables/AuthService.html":{}}}],["looking",{"_index":530,"title":{},"body":{"index.html":{}}}],["loop",{"_index":582,"title":{},"body":{"index.html":{}}}],["makes",{"_index":537,"title":{},"body":{"index.html":{}}}],["maksimov",{"_index":614,"title":{},"body":{"license.html":{}}}],["managing",{"_index":550,"title":{},"body":{"index.html":{}}}],["matches",{"_index":185,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["matches(/((?=.*\\d)|(?=.*\\w+))(?![.\\n])(?=.*[a",{"_index":247,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["matches(/^[a",{"_index":206,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["matching",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["mau",{"_index":533,"title":{},"body":{"index.html":{}}}],["maxlength",{"_index":243,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["maxlength(96",{"_index":245,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["merchantability",{"_index":656,"title":{},"body":{"license.html":{}}}],["merge",{"_index":632,"title":{},"body":{"license.html":{}}}],["message",{"_index":161,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["meta",{"_index":196,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["metadata",{"_index":474,"title":{},"body":{"dependencies.html":{}}}],["metaoptions",{"_index":108,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["method",{"_index":436,"title":{},"body":{"injectables/UsersService.html":{}}}],["methods",{"_index":46,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["minlength",{"_index":184,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(3",{"_index":216,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{}}}],["minlength(4",{"_index":202,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["minlength(8",{"_index":246,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["miscellaneous",{"_index":478,"title":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}},"body":{"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{}}}],["mit",{"_index":590,"title":{},"body":{"index.html":{},"license.html":{}}}],["mode",{"_index":509,"title":{},"body":{"index.html":{}}}],["modify",{"_index":631,"title":{},"body":{"license.html":{}}}],["module",{"_index":18,"title":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["modules",{"_index":20,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["more",{"_index":529,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":605,"title":{},"body":{"index.html":{}}}],["name",{"_index":78,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["need",{"_index":577,"title":{},"body":{"index.html":{}}}],["nest",{"_index":497,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":609,"title":{},"body":{"index.html":{}}}],["nestjs",{"_index":521,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":466,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mapped",{"_index":269,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":468,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":201,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["new",{"_index":280,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["node.js",{"_index":489,"title":{},"body":{"index.html":{}}}],["noninfringement",{"_index":660,"title":{},"body":{"license.html":{}}}],["notice",{"_index":645,"title":{},"body":{"license.html":{}}}],["npm",{"_index":503,"title":{},"body":{"index.html":{}}}],["number",{"_index":252,"title":{},"body":{"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["object",{"_index":217,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["obtaining",{"_index":620,"title":{},"body":{"license.html":{}}}],["offer",{"_index":587,"title":{},"body":{"index.html":{}}}],["official",{"_index":534,"title":{},"body":{"index.html":{}}}],["open",{"_index":592,"title":{},"body":{"index.html":{}}}],["optional",{"_index":80,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["options",{"_index":219,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["options.dto",{"_index":197,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["options.dto.ts",{"_index":223,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["options.dto.ts:6",{"_index":225,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["options.dto.ts:9",{"_index":226,"title":{},"body":{"classes/CreatePostMetaOptionsDto.html":{}}}],["otherwise",{"_index":437,"title":{},"body":{"injectables/UsersService.html":{},"license.html":{}}}],["out",{"_index":35,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"index.html":{},"license.html":{},"overview.html":{}}}],["overview",{"_index":678,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":462,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["page",{"_index":140,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"miscellaneous/enumerations.html":{}}}],["param",{"_index":297,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["parameters",{"_index":77,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params.dto",{"_index":372,"title":{},"body":{"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["params.dto.ts",{"_index":251,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["params.dto.ts:12",{"_index":255,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["parseintpipe",{"_index":367,"title":{},"body":{"controllers/UsersController.html":{}}}],["part",{"_index":578,"title":{},"body":{"index.html":{}}}],["partialtype",{"_index":264,"title":{},"body":{"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{}}}],["partialtype(createpostdto",{"_index":261,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["partialtype(createuserdto",{"_index":268,"title":{},"body":{"classes/PatchUserDto.html":{}}}],["particular",{"_index":658,"title":{},"body":{"license.html":{}}}],["password",{"_index":84,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreateUserDto.html":{},"controllers/UsersController.html":{}}}],["patch",{"_index":299,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["patch('/:postid",{"_index":317,"title":{},"body":{"controllers/PostsController.html":{}}}],["patchpostdto",{"_index":258,"title":{"classes/PatchPostDto.html":{}},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"coverage.html":{}}}],["patchpostsdto",{"_index":296,"title":{},"body":{"controllers/PostsController.html":{}}}],["patchuser",{"_index":339,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(@body",{"_index":406,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuser(patchuserdto",{"_index":361,"title":{},"body":{"controllers/UsersController.html":{}}}],["patchuserdto",{"_index":266,"title":{"classes/PatchUserDto.html":{}},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{},"coverage.html":{}}}],["permission",{"_index":615,"title":{},"body":{"license.html":{}}}],["permit",{"_index":638,"title":{},"body":{"license.html":{}}}],["person",{"_index":152,"title":{},"body":{"classes/CreatePostDto.html":{},"license.html":{}}}],["persons",{"_index":639,"title":{},"body":{"license.html":{}}}],["platform",{"_index":532,"title":{},"body":{"index.html":{}}}],["please",{"_index":560,"title":{},"body":{"index.html":{}}}],["portions",{"_index":649,"title":{},"body":{"license.html":{}}}],["position",{"_index":357,"title":{},"body":{"controllers/UsersController.html":{}}}],["possible",{"_index":138,"title":{},"body":{"classes/CreatePostDto.html":{},"index.html":{}}}],["post",{"_index":119,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{},"coverage.html":{},"miscellaneous/enumerations.html":{}}}],["post'})@apiresponse({status",{"_index":281,"title":{},"body":{"controllers/PostsController.html":{}}}],["post'})@isint()@isnotempty",{"_index":262,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["post'})@isoptional()@isstring",{"_index":121,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post'})@isstring()@isnotempty()@matches(/^[a",{"_index":158,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post'})@isstring()@minlength(4)@isnotempty",{"_index":179,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto",{"_index":265,"title":{},"body":{"classes/PatchPostDto.html":{},"controllers/PostsController.html":{}}}],["post.dto.ts",{"_index":104,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/PatchPostDto.html":{},"coverage.html":{}}}],["post.dto.ts:11",{"_index":263,"title":{},"body":{"classes/PatchPostDto.html":{}}}],["post.dto.ts:122",{"_index":135,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:27",{"_index":180,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:36",{"_index":143,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:47",{"_index":168,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:56",{"_index":174,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:64",{"_index":122,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:72",{"_index":156,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:80",{"_index":126,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:88",{"_index":149,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["post.dto.ts:99",{"_index":178,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["posts",{"_index":274,"title":{},"body":{"controllers/PostsController.html":{}}}],["posts.controller",{"_index":324,"title":{},"body":{"modules/PostsModule.html":{}}}],["posts/posts.module",{"_index":40,"title":{},"body":{"modules/AppModule.html":{}}}],["postscontroller",{"_index":272,"title":{"controllers/PostsController.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"coverage.html":{}}}],["postsmodule",{"_index":31,"title":{"modules/PostsModule.html":{}},"body":{"modules/AppModule.html":{},"modules/PostsModule.html":{},"modules.html":{},"overview.html":{}}}],["postsservice",{"_index":300,"title":{"injectables/PostsService.html":{}},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"coverage.html":{},"overview.html":{}}}],["poststatus",{"_index":169,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["posttype",{"_index":109,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["prefix",{"_index":58,"title":{},"body":{"controllers/AuthController.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["private",{"_index":91,"title":{},"body":{"injectables/AuthService.html":{},"injectables/UsersService.html":{}}}],["production",{"_index":511,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":488,"title":{},"body":{"index.html":{}}}],["project",{"_index":501,"title":{},"body":{"index.html":{}}}],["properties",{"_index":105,"title":{"properties.html":{}},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"properties.html":{}}}],["provided",{"_index":650,"title":{},"body":{"license.html":{}}}],["providers",{"_index":25,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["providers/auth.service",{"_index":61,"title":{},"body":{"controllers/AuthController.html":{},"modules/AuthModule.html":{}}}],["providers/posts.service",{"_index":301,"title":{},"body":{"controllers/PostsController.html":{},"modules/PostsModule.html":{}}}],["providers/users.service",{"_index":376,"title":{},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{}}}],["public",{"_index":70,"title":{},"body":{"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["publish",{"_index":145,"title":{},"body":{"classes/CreatePostDto.html":{},"license.html":{}}}],["published",{"_index":207,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["published''})@isenum(poststatus)@isnotempty",{"_index":173,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["publishon",{"_index":110,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["purpose",{"_index":659,"title":{},"body":{"license.html":{}}}],["put",{"_index":363,"title":{},"body":{"controllers/UsersController.html":{}}}],["query",{"_index":355,"title":{},"body":{"controllers/UsersController.html":{}}}],["query'})@apiquery({name",{"_index":352,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('limit",{"_index":384,"title":{},"body":{"controllers/UsersController.html":{}}}],["query('page",{"_index":386,"title":{},"body":{"controllers/UsersController.html":{}}}],["questions",{"_index":558,"title":{},"body":{"index.html":{}}}],["r\\n",{"_index":209,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["read",{"_index":600,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"controllers/AuthController.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["ready",{"_index":519,"title":{},"body":{"index.html":{}}}],["real",{"_index":573,"title":{},"body":{"index.html":{}}}],["reflect",{"_index":473,"title":{},"body":{"dependencies.html":{}}}],["registered",{"_index":347,"title":{},"body":{"controllers/UsersController.html":{}}}],["repository",{"_index":500,"title":{},"body":{"index.html":{}}}],["request",{"_index":404,"title":{},"body":{"controllers/UsersController.html":{}}}],["required",{"_index":130,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/UsersController.html":{}}}],["requiring",{"_index":540,"title":{},"body":{"index.html":{}}}],["reset",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}],["resources",{"_index":552,"title":{},"body":{"index.html":{}}}],["restriction",{"_index":626,"title":{},"body":{"license.html":{}}}],["results",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/enumerations.html":{},"miscellaneous/functions.html":{},"index.html":{},"license.html":{},"modules.html":{},"overview.html":{},"properties.html":{}}}],["return",{"_index":52,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["returned",{"_index":354,"title":{},"body":{"controllers/UsersController.html":{}}}],["returns",{"_index":50,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["review",{"_index":172,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["rights",{"_index":629,"title":{},"body":{"license.html":{}}}],["run",{"_index":505,"title":{},"body":{"index.html":{}}}],["runs",{"_index":526,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":476,"title":{},"body":{"dependencies.html":{}}}],["sample_token",{"_index":95,"title":{},"body":{"injectables/AuthService.html":{}}}],["scalable",{"_index":493,"title":{},"body":{"index.html":{}}}],["scheduled",{"_index":171,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["schema",{"_index":111,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["sell",{"_index":636,"title":{},"body":{"license.html":{}}}],["sent",{"_index":403,"title":{},"body":{"controllers/UsersController.html":{}}}],["series",{"_index":204,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["series''})@isenum(posttype)@isnotempty",{"_index":142,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["server",{"_index":494,"title":{},"body":{"index.html":{}}}],["setup",{"_index":502,"title":{},"body":{"index.html":{}}}],["shall",{"_index":646,"title":{},"body":{"license.html":{}}}],["side",{"_index":495,"title":{},"body":{"index.html":{}}}],["sidebarenabled",{"_index":220,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["simple",{"_index":542,"title":{},"body":{"index.html":{}}}],["slug",{"_index":112,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["small",{"_index":162,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["software",{"_index":622,"title":{},"body":{"license.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/AuthController.html":{},"modules/AuthModule.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"classes/PatchUserDto.html":{},"controllers/PostsController.html":{},"modules/PostsModule.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"index.html":{}}}],["spaces",{"_index":166,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["specific",{"_index":253,"title":{},"body":{"classes/GetUsersParamDto.html":{}}}],["sponsors",{"_index":595,"title":{},"body":{"index.html":{}}}],["src/.../main.ts",{"_index":485,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../poststatus.enum.ts",{"_index":480,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/.../posttype.enum.ts",{"_index":481,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.module.ts",{"_index":36,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":44,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":49,"title":{},"body":{"injectables/AppService.html":{}}}],["src/auth/auth.controller.ts",{"_index":57,"title":{},"body":{"controllers/AuthController.html":{},"coverage.html":{}}}],["src/auth/auth.module",{"_index":412,"title":{},"body":{"modules/UsersModule.html":{}}}],["src/auth/auth.module.ts",{"_index":66,"title":{},"body":{"modules/AuthModule.html":{}}}],["src/auth/providers/auth.service",{"_index":438,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/auth/providers/auth.service.ts",{"_index":69,"title":{},"body":{"injectables/AuthService.html":{},"coverage.html":{}}}],["src/auth/providers/auth.service.ts:10",{"_index":86,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:17",{"_index":81,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/auth/providers/auth.service.ts:5",{"_index":76,"title":{},"body":{"injectables/AuthService.html":{}}}],["src/main.ts",{"_index":453,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/posts/dto/create",{"_index":103,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"coverage.html":{}}}],["src/posts/dto/patch",{"_index":259,"title":{},"body":{"classes/PatchPostDto.html":{},"coverage.html":{}}}],["src/posts/enums/poststatus.enum.ts",{"_index":482,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/enums/posttype.enum.ts",{"_index":483,"title":{},"body":{"miscellaneous/enumerations.html":{}}}],["src/posts/posts.controller.ts",{"_index":273,"title":{},"body":{"controllers/PostsController.html":{},"coverage.html":{}}}],["src/posts/posts.controller.ts:13",{"_index":289,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:23",{"_index":285,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.controller.ts:37",{"_index":295,"title":{},"body":{"controllers/PostsController.html":{}}}],["src/posts/posts.module.ts",{"_index":323,"title":{},"body":{"modules/PostsModule.html":{}}}],["src/posts/providers/posts.service.ts",{"_index":325,"title":{},"body":{"injectables/PostsService.html":{},"coverage.html":{}}}],["src/posts/providers/posts.service.ts:5",{"_index":327,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/posts/providers/posts.service.ts:7",{"_index":329,"title":{},"body":{"injectables/PostsService.html":{}}}],["src/users/dtos/create",{"_index":228,"title":{},"body":{"classes/CreateUserDto.html":{},"coverage.html":{}}}],["src/users/dtos/get",{"_index":249,"title":{},"body":{"classes/GetUsersParamDto.html":{},"coverage.html":{}}}],["src/users/dtos/patch",{"_index":267,"title":{},"body":{"classes/PatchUserDto.html":{},"coverage.html":{}}}],["src/users/providers/users.service",{"_index":89,"title":{},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{}}}],["src/users/providers/users.service.ts",{"_index":413,"title":{},"body":{"injectables/UsersService.html":{},"coverage.html":{}}}],["src/users/providers/users.service.ts:26",{"_index":430,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:29",{"_index":426,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:46",{"_index":428,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/providers/users.service.ts:8",{"_index":418,"title":{},"body":{"injectables/UsersService.html":{}}}],["src/users/users.controller.ts",{"_index":336,"title":{},"body":{"controllers/UsersController.html":{},"coverage.html":{}}}],["src/users/users.controller.ts:54",{"_index":360,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:79",{"_index":341,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.controller.ts:88",{"_index":362,"title":{},"body":{"controllers/UsersController.html":{}}}],["src/users/users.module",{"_index":39,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{}}}],["src/users/users.module.ts",{"_index":410,"title":{},"body":{"modules/UsersModule.html":{}}}],["start",{"_index":507,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":510,"title":{},"body":{"index.html":{}}}],["start:prodrun",{"_index":512,"title":{},"body":{"index.html":{}}}],["started",{"_index":487,"title":{"index.html":{},"license.html":{}},"body":{}}],["starter",{"_index":499,"title":{},"body":{"index.html":{}}}],["statements",{"_index":448,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":113,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["stay",{"_index":581,"title":{},"body":{"index.html":{}}}],["steps",{"_index":523,"title":{},"body":{"index.html":{}}}],["story",{"_index":141,"title":{},"body":{"classes/CreatePostDto.html":{},"miscellaneous/enumerations.html":{}}}],["straightforward",{"_index":538,"title":{},"body":{"index.html":{}}}],["string",{"_index":51,"title":{},"body":{"injectables/AppService.html":{},"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["subject",{"_index":641,"title":{},"body":{"license.html":{}}}],["sublicense",{"_index":634,"title":{},"body":{"license.html":{}}}],["substantial",{"_index":648,"title":{},"body":{"license.html":{}}}],["succesfully",{"_index":350,"title":{},"body":{"controllers/UsersController.html":{}}}],["successfully",{"_index":283,"title":{},"body":{"controllers/PostsController.html":{}}}],["summary",{"_index":311,"title":{},"body":{"controllers/PostsController.html":{},"controllers/UsersController.html":{}}}],["support",{"_index":559,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":676,"title":{},"body":{"modules.html":{}}}],["table",{"_index":461,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":460,"title":{},"body":{"coverage.html":{}}}],["tag1",{"_index":213,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["tag2",{"_index":214,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["tag3",{"_index":215,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["tags",{"_index":114,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["take",{"_index":524,"title":{},"body":{"index.html":{}}}],["test",{"_index":332,"title":{},"body":{"injectables/PostsService.html":{},"index.html":{}}}],["test:covdeployment",{"_index":517,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":516,"title":{},"body":{"index.html":{}}}],["tests",{"_index":513,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":594,"title":{},"body":{"index.html":{}}}],["this.authservice.isauth",{"_index":439,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.isauth",{"_index":440,"title":{},"body":{"injectables/UsersService.html":{}}}],["this.postsservice.findall(userid",{"_index":310,"title":{},"body":{"controllers/PostsController.html":{}}}],["this.userservice.findall",{"_index":392,"title":{},"body":{"controllers/UsersController.html":{}}}],["this.usersservice.findbyid(id",{"_index":94,"title":{},"body":{"injectables/AuthService.html":{}}}],["this.usersservice.findbyid(userid",{"_index":330,"title":{},"body":{"injectables/PostsService.html":{}}}],["throws",{"_index":398,"title":{},"body":{"controllers/UsersController.html":{}}}],["time",{"_index":574,"title":{},"body":{"index.html":{}}}],["title",{"_index":115,"title":{},"body":{"classes/CreatePostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["title1",{"_index":333,"title":{},"body":{"injectables/PostsService.html":{}}}],["token",{"_index":99,"title":{},"body":{"injectables/AuthService.html":{}}}],["tort",{"_index":671,"title":{},"body":{"license.html":{}}}],["touch",{"_index":602,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":198,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/GetUsersParamDto.html":{},"dependencies.html":{}}}],["true",{"_index":100,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"injectables/UsersService.html":{}}}],["true})@minlength(3",{"_index":176,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["true})@type(undefined",{"_index":134,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["twitter",{"_index":608,"title":{},"body":{"index.html":{}}}],["type",{"_index":79,"title":{},"body":{"injectables/AuthService.html":{},"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/PostsController.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["types",{"_index":270,"title":{},"body":{"classes/PatchUserDto.html":{},"dependencies.html":{}}}],["typescript",{"_index":498,"title":{},"body":{"index.html":{}}}],["undefined",{"_index":429,"title":{},"body":{"injectables/UsersService.html":{}}}],["undefined})@isoptional()@isarray()@isstring({each",{"_index":175,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["undefined})@isoptional()@isarray()@validatenested({each",{"_index":133,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["unit",{"_index":514,"title":{},"body":{"index.html":{}}}],["unlicensed",{"_index":683,"title":{},"body":{"properties.html":{}}}],["updated",{"_index":316,"title":{},"body":{"controllers/PostsController.html":{}}}],["updated.'})@patch('/:postid",{"_index":294,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost",{"_index":277,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(@body",{"_index":318,"title":{},"body":{"controllers/PostsController.html":{}}}],["updatepost(patchpostsdto",{"_index":291,"title":{},"body":{"controllers/PostsController.html":{}}}],["updates",{"_index":292,"title":{},"body":{"controllers/PostsController.html":{},"index.html":{}}}],["url",{"_index":167,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["use",{"_index":630,"title":{},"body":{"license.html":{}}}],["used",{"_index":422,"title":{},"body":{"injectables/UsersService.html":{}}}],["user",{"_index":93,"title":{},"body":{"injectables/AuthService.html":{},"classes/GetUsersParamDto.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{}}}],["user.dto",{"_index":271,"title":{},"body":{"classes/PatchUserDto.html":{},"controllers/UsersController.html":{}}}],["user.dto.ts",{"_index":229,"title":{},"body":{"classes/CreateUserDto.html":{},"classes/PatchUserDto.html":{},"coverage.html":{}}}],["user.dto.ts:16",{"_index":235,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:22",{"_index":237,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:27",{"_index":233,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["user.dto.ts:35",{"_index":242,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["userid",{"_index":290,"title":{},"body":{"controllers/PostsController.html":{},"injectables/PostsService.html":{}}}],["users",{"_index":250,"title":{},"body":{"classes/GetUsersParamDto.html":{},"controllers/UsersController.html":{},"injectables/UsersService.html":{},"coverage.html":{}}}],["users.controller",{"_index":411,"title":{},"body":{"modules/UsersModule.html":{}}}],["userscontroller",{"_index":335,"title":{"controllers/UsersController.html":{}},"body":{"controllers/UsersController.html":{},"modules/UsersModule.html":{},"coverage.html":{}}}],["userservice",{"_index":380,"title":{},"body":{"controllers/UsersController.html":{}}}],["usersmodule",{"_index":32,"title":{"modules/UsersModule.html":{}},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"modules.html":{},"overview.html":{}}}],["usersservice",{"_index":75,"title":{"injectables/UsersService.html":{}},"body":{"injectables/AuthService.html":{},"injectables/PostsService.html":{},"controllers/UsersController.html":{},"modules/UsersModule.html":{},"injectables/UsersService.html":{},"coverage.html":{},"overview.html":{}}}],["uses",{"_index":164,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["using",{"_index":575,"title":{},"body":{"index.html":{}}}],["validatenested",{"_index":191,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validatenested({each",{"_index":222,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["validationpipe",{"_index":369,"title":{},"body":{"controllers/UsersController.html":{}}}],["validator",{"_index":192,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"classes/CreateUserDto.html":{},"classes/GetUsersParamDto.html":{},"classes/PatchPostDto.html":{},"controllers/UsersController.html":{},"dependencies.html":{}}}],["value",{"_index":221,"title":{},"body":{"classes/CreatePostDto.html":{},"classes/CreatePostMetaOptionsDto.html":{},"miscellaneous/enumerations.html":{}}}],["values",{"_index":139,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["version",{"_index":681,"title":{},"body":{"properties.html":{}}}],["video",{"_index":567,"title":{},"body":{"index.html":{}}}],["viktor",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"license.html":{}}}],["visit",{"_index":556,"title":{},"body":{"index.html":{}}}],["visualize",{"_index":570,"title":{},"body":{"index.html":{}}}],["void",{"_index":286,"title":{},"body":{"controllers/PostsController.html":{}}}],["want",{"_index":358,"title":{},"body":{"controllers/UsersController.html":{}}}],["warranties",{"_index":655,"title":{},"body":{"license.html":{}}}],["warranty",{"_index":651,"title":{},"body":{"license.html":{}}}],["watch",{"_index":508,"title":{},"body":{"index.html":{}}}],["weak",{"_index":241,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["website",{"_index":606,"title":{},"body":{"index.html":{}}}],["whether",{"_index":668,"title":{},"body":{"license.html":{}}}],["without",{"_index":165,"title":{},"body":{"classes/CreatePostDto.html":{},"license.html":{}}}],["working",{"_index":555,"title":{},"body":{"index.html":{}}}],["world",{"_index":54,"title":{},"body":{"injectables/AppService.html":{}}}],["x",{"_index":584,"title":{},"body":{"index.html":{}}}],["you'd",{"_index":598,"title":{},"body":{"index.html":{}}}],["you're",{"_index":518,"title":{},"body":{"index.html":{}}}],["z",{"_index":240,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["z0",{"_index":159,"title":{},"body":{"classes/CreatePostDto.html":{}}}],["z])(?=.*[a",{"_index":239,"title":{},"body":{"classes/CreateUserDto.html":{}}}],["zoom",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"modules/AuthModule.html":{},"modules/PostsModule.html":{},"modules/UsersModule.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            AuthModule\n                        \n                        \n                            PostsModule\n                        \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport { UsersModule } from 'src/users/users.module';\nimport { PostsModule } from './posts/posts.module';\nimport { AuthModule } from './auth/auth.module';\n\n@Module({\n  imports: [UsersModule, PostsModule, AuthModule],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n                    \n                        \n                            Defined in src/app.service.ts:5\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         string\n\n                        \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World, Viktor!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/AuthController.html":{"url":"controllers/AuthController.html","title":"controller - AuthController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AuthController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/auth.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                auth\n            \n\n\n\n\n\n\n\n    \n\n\n    \n        import { Controller } from '@nestjs/common';\nimport { AuthService } from './providers/auth.service';\n\n@Controller('auth')\nexport class AuthController {\n    constructor(private readonly authService: AuthService) {\n\n    }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AuthModule.html":{"url":"modules/AuthModule.html","title":"module - AuthModule","body":"\n                   \n\n\n\n\n    Modules\n    AuthModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\n\nAuthService \n\nAuthService \n\n\n\nAuthModule\n\nAuthModule\n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/auth/auth.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AuthService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AuthController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            AuthService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { AuthController } from './auth.controller';\nimport { AuthService } from './providers/auth.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [AuthController],\n  providers: [AuthService],\n  imports: [forwardRef(() => UsersModule)],\n  exports: [AuthService],\n})\nexport class AuthModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AuthService.html":{"url":"injectables/AuthService.html","title":"injectable - AuthService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AuthService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/auth/providers/auth.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                isAuth\n                            \n                            \n                                    Public\n                                login\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/auth/providers/auth.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        isAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:17\n                        \n                    \n\n\n            \n                \n\n                        \n                            Returns :         boolean\n\n                        \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        login\n                        \n                    \n                \n            \n            \n                \n                        \n                    login(email: string, password: string, id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/auth/providers/auth.service.ts:10\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                email\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                password\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, forwardRef, Inject } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class AuthService {\n  constructor(\n    @Inject(forwardRef(() => UsersService))\n    private readonly usersService: UsersService\n) {}\n  public login(email: string, password: string, id: string) {\n    const user = this.usersService.findById(id);\n    return 'SAMPLE_TOKEN';\n    //check if the user exists in DB\n    //after login returns a token\n  }\n\n  public isAuth() {\n    return true;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostDto.html":{"url":"classes/CreatePostDto.html","title":"class - CreatePostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dto/create-post.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                content\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                featuredImageUrl\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                metaOptions\n                            \n                            \n                                    \n                                    \n                                    \n                                postType\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                publishOn\n                            \n                            \n                                    \n                                    \n                                    \n                                    Optional\n                                schema\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                slug\n                            \n                            \n                                    \n                                    \n                                    \n                                status\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                tags\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                title\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        content\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'This is the content for the blog post', example: 'This is the content for the blog post'})@IsOptional()@IsString()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:64\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        featuredImageUrl\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'This is the featured image for the blog post', example: 'https://example.com/image.png'})@IsOptional()@IsUrl()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:80\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        metaOptions\n                        \n                    \n                \n            \n                \n                    \n                        Type :         CreatePostMetaOptionsDto[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'array', required: false, items: undefined})@IsOptional()@IsArray()@ValidateNested({each: true})@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:122\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        postType\n                        \n                    \n                \n            \n                \n                    \n                        Type :         postType\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: postType, description: 'Possible values, 'post', 'page', 'story', 'series''})@IsEnum(postType)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:36\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        publishOn\n                        \n                    \n                \n            \n                \n                    \n                        Type :         Date\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'This is the publish date for the blog post', example: '2022-01-01T00:00:00.000Z'})@IsOptional()@IsISO8601()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:88\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Optional\n                        schema\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'This is the schema for the blog post', example: '{\n \"@context\": \"https://schema.org\", \n \"@type\": \"Person\", \n \"name\": \"John Doe\"\n}'})@IsOptional()@IsJSON()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:72\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        slug\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the slug for the blog post'})@IsString()@IsNotEmpty()@Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {message: 'A slug should be all small letters and uses only \"-\" and without spaces. For example \"my-url\"'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:47\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        status\n                        \n                    \n                \n            \n                \n                    \n                        Type :         postStatus\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({enum: postStatus, description: 'Possible values, 'draft', 'scheduled', 'review', 'published''})@IsEnum(postStatus)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:56\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Optional\n                        tags\n                        \n                    \n                \n            \n                \n                    \n                        Type :     string[]\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({type: 'array', description: 'This is the tags for the blog post', example: undefined})@IsOptional()@IsArray()@IsString({each: true})@MinLength(3, {each: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:99\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        title\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'This is the title for the blog post'})@IsString()@MinLength(4)@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post.dto.ts:27\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsNotEmpty,\n  IsOptional,\n  MinLength,\n  Matches,\n  IsEnum,\n  IsJSON,\n  IsUrl,\n  IsISO8601,\n  IsArray,\n  ValidateNested,\n} from 'class-validator';\nimport { postType } from '../enums/postType.enum';\nimport { postStatus } from '../enums/postStatus.enum';\nimport { CreatePostMetaOptionsDto } from './create-post-meta-options.dto';\nimport { Type } from 'class-transformer';\nimport { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';\n\nexport class CreatePostDto {\n  @ApiProperty({\n    description: \"This is the title for the blog post\"\n  })\n  @IsString()\n  @MinLength(4)\n  @IsNotEmpty()\n  title: string;\n\n\n  @ApiProperty({\n    enum: postType,\n    description: \"Possible values, 'post', 'page', 'story', 'series'\"\n  })\n  @IsEnum(postType)\n  @IsNotEmpty()\n  postType: postType;\n\n  @ApiProperty({\n    description: \"This is the slug for the blog post\"\n  })\n  @IsString()\n  @IsNotEmpty()\n  @Matches(/^[a-z0-9]+(?:-[a-z0-9]+)*$/, {\n    message:\n      'A slug should be all small letters and uses only \"-\" and without spaces. For example \"my-url\"',\n  })\n  slug: string;\n\n\n  @ApiProperty({\n    enum: postStatus,\n    description: \"Possible values, 'draft', 'scheduled', 'review', 'published'\"\n  })\n  @IsEnum(postStatus)\n  @IsNotEmpty()\n  status: postStatus;\n\n  @ApiPropertyOptional({\n    description: \"This is the content for the blog post\",\n    example: \"This is the content for the blog post\"\n  })\n  @IsOptional()\n  @IsString()\n  content?: string;\n\n  @ApiPropertyOptional({\n    description: \"This is the schema for the blog post\",\n    example: '{\\r\\n \"@context\": \"https://schema.org\", \\r\\n \"@type\": \"Person\", \\r\\n \"name\": \"John Doe\"\\r\\n}'\n  })\n  @IsOptional()\n  @IsJSON()\n  schema?: string;\n\n  @ApiPropertyOptional({\n      description: \"This is the featured image for the blog post\",\n      example: \"https://example.com/image.png\"\n  })\n  @IsOptional()\n  @IsUrl()\n  featuredImageUrl?: string;\n\n  @ApiPropertyOptional({\n    description: \"This is the publish date for the blog post\",\n    example: \"2022-01-01T00:00:00.000Z\"\n  })\n  @IsOptional()\n  @IsISO8601()\n  publishOn?: Date;\n\n  @ApiPropertyOptional({\n    type: 'array',\n    description: 'This is the tags for the blog post',\n    example: ['tag1', 'tag2', 'tag3']\n  })\n  @IsOptional()\n  @IsArray()\n  @IsString({ each: true })\n  @MinLength(3, { each: true })\n  tags?: string[];\n\n  @ApiPropertyOptional({\n      type: 'array',\n      required: false,\n      items: {\n        type: 'object',\n        properties: {\n          key: { type: 'string',\n            description: 'This is the key for the blog post meta options',\n            example: 'sidebarEnabled'\n           },\n          value: { type: 'any',\n            description: 'This is the value for the blog post meta options',\n            example: true\n           }\n        }\n      }\n  })\n  @IsOptional()\n  @IsArray()\n  @ValidateNested({each: true})\n  @Type(()=> CreatePostMetaOptionsDto)\n  metaOptions?: CreatePostMetaOptionsDto[];\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreatePostMetaOptionsDto.html":{"url":"classes/CreatePostMetaOptionsDto.html","title":"class - CreatePostMetaOptionsDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreatePostMetaOptionsDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dto/create-post-meta-options.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                key\n                            \n                            \n                                    \n                                value\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                        key\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post-meta-options.dto.ts:6\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                        value\n                        \n                    \n                \n            \n                \n                    \n                        Type :         any\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/create-post-meta-options.dto.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsNotEmpty, IsString } from \"class-validator\";\n\nexport class CreatePostMetaOptionsDto {\n    @IsString()\n    @IsNotEmpty()\n    key: string;\n\n    @IsNotEmpty()\n    value: any\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateUserDto.html":{"url":"classes/CreateUserDto.html","title":"class - CreateUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/create-user.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                email\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                firstName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                lastName\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                password\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        email\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@IsEmail()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:27\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        firstName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(3)@MaxLength(96)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:16\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        lastName\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsOptional()@MinLength(3)@MaxLength(96)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:22\n                        \n                    \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                        password\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@IsNotEmpty()@MinLength(8)@Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {message: 'password is too weak'})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/create-user.dto.ts:35\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import {\n  IsString,\n  IsNotEmpty,\n  IsOptional,\n  MinLength,\n  MaxLength,\n  Matches,\n  IsEmail,\n} from 'class-validator';\n\nexport class CreateUserDto {\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(3)\n  @MaxLength(96)\n  firstName: string;\n\n  @IsString()\n  @IsOptional()\n  @MinLength(3)\n  @MaxLength(96)\n  lastName?: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @IsEmail()\n  email: string;\n\n  @IsString()\n  @IsNotEmpty()\n  @MinLength(8)\n  @Matches(/((?=.*\\d)|(?=.*\\W+))(?![.\\n])(?=.*[A-Z])(?=.*[a-z]).*$/, {\n    message: 'password is too weak',\n  })\n  password: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/GetUsersParamDto.html":{"url":"classes/GetUsersParamDto.html","title":"class - GetUsersParamDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  GetUsersParamDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/get-users-params.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    \n                                    Optional\n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            Optional\n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiPropertyOptional({description: 'get user with a specific id', example: 1234})@IsOptional()@IsInt()@Type(undefined)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/users/dtos/get-users-params.dto.ts:12\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsInt, IsOptional } from \"class-validator\";\nimport { Type } from \"class-transformer\";\nimport { ApiPropertyOptional } from \"@nestjs/swagger\";\nexport class GetUsersParamDto {\n    @ApiPropertyOptional({\n        description: 'get user with a specific id',\n        example: 1234\n    })\n    @IsOptional()\n    @IsInt()\n    @Type(() => Number)\n    id?: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchPostDto.html":{"url":"classes/PatchPostDto.html","title":"class - PatchPostDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchPostDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/dto/patch-post.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreatePostDto)\n            \n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                id\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                        id\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @ApiProperty({description: 'The id of the post'})@IsInt()@IsNotEmpty()\n                        \n                    \n                \n                    \n                        \n                                Defined in src/posts/dto/patch-post.dto.ts:11\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { ApiProperty, PartialType } from '@nestjs/swagger';\nimport { CreatePostDto } from './create-post.dto';\nimport { IsInt, IsNotEmpty } from 'class-validator';\n\nexport class PatchPostDto extends PartialType(CreatePostDto) {\n    @ApiProperty({\n        description: 'The id of the post'\n    })\n    @IsInt()\n    @IsNotEmpty()\n    id: number;\n}\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/PatchUserDto.html":{"url":"classes/PatchUserDto.html","title":"class - PatchUserDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  PatchUserDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/dtos/patch-user.dto.ts\n        \n\n\n\n            \n                Extends\n            \n            \n                            PartialType(CreateUserDto)\n            \n\n\n\n\n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { PartialType } from \"@nestjs/mapped-types\";\nimport { CreateUserDto } from \"./create-user.dto\";\n  \n  export class PatchUserDto extends PartialType(CreateUserDto) {\n\n  }\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/PostsController.html":{"url":"controllers/PostsController.html","title":"controller - PostsController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  PostsController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/posts.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                posts\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                createPost\n                            \n                            \n                                    \n                                    Public\n                                getPosts\n                            \n                            \n                                    \n                                    \n                                    \n                                    Public\n                                updatePost\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        createPost\n                        \n                    \n                \n            \n            \n                \n                        \n                    createPost(createPostDto: CreatePostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Create a new post'})@ApiResponse({status: 201, description: 'The post has been successfully created.'})@Post()\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:23\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createPostDto\n                                            \n                                                            CreatePostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        getPosts\n                        \n                    \n                \n            \n            \n                \n                        \n                    getPosts(userId: string)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:userId?')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:13\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            Public\n                        updatePost\n                        \n                    \n                \n            \n            \n                \n                        \n                    updatePost(patchPostsDto: PatchPostDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @ApiOperation({summary: 'Updates a new post'})@ApiResponse({status: 200, description: 'The post has been successfully updated.'})@Patch('/:postId')\n                \n            \n\n                    \n                        \n                            Defined in src/posts/posts.controller.ts:37\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchPostsDto\n                                            \n                                                            PatchPostDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         void\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get, Param, Post, Body, Patch } from '@nestjs/common';\nimport { PostsService } from './providers/posts.service';\nimport { ApiOperation, ApiResponse, ApiTags } from '@nestjs/swagger';\nimport { CreatePostDto } from './dto/create-post.dto';\nimport { PatchPostDto } from './dto/patch-post.dto';\n\n@Controller('posts')\n@ApiTags('Posts')\nexport class PostsController {\n  constructor(private readonly postsService: PostsService) {}\n\n  @Get('/:userId?')\n  public getPosts(@Param('userId') userId: string) {\n    return this.postsService.findAll(userId);\n  }\n\n  @ApiOperation({ summary: 'Create a new post' })\n  @ApiResponse({\n    status: 201,\n    description: 'The post has been successfully created.',\n  })\n  @Post()\n  public createPost(@Body() createPostDto: CreatePostDto) {\n    console.log('postdto', createPostDto);\n    // const {title, description} = createPostDto;\n    // console.log('postDto title', title)\n    // console.log('postDto desc', description)\n  }\n\n\n  @ApiOperation({ summary: 'Updates a new post' })\n  @ApiResponse({\n    status: 200,\n    description: 'The post has been successfully updated.',\n  })\n  @Patch('/:postId')\n  public updatePost(@Body() patchPostsDto: PatchPostDto) {\n    console.log('patchPostsDto', patchPostsDto);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/PostsModule.html":{"url":"modules/PostsModule.html","title":"module - PostsModule","body":"\n                   \n\n\n\n\n    Modules\n    PostsModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_imports\n\n\n\ncluster_PostsModule_providers\n\n\n\n\nUsersModule\n\nUsersModule\n\n\n\nPostsModule\n\nPostsModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/posts/posts.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            PostsService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            PostsController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            UsersModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { PostsController } from './posts.controller';\nimport { PostsService } from './providers/posts.service';\nimport { UsersModule } from 'src/users/users.module';\n\n@Module({\n  controllers: [PostsController],\n  providers: [PostsService],\n  imports: [UsersModule]\n})\nexport class PostsModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/PostsService.html":{"url":"injectables/PostsService.html","title":"injectable - PostsService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  PostsService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/posts/providers/posts.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(usersService: UsersService)\n                    \n                \n                        \n                            \n                                Defined in src/posts/providers/posts.service.ts:5\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        usersService\n                                                  \n                                                        \n                                                                        UsersService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(userId: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/posts/providers/posts.service.ts:7\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                userId\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\nimport { UsersService } from 'src/users/providers/users.service';\n\n@Injectable()\nexport class PostsService {\n  constructor(private readonly usersService: UsersService) {}\n  public findAll(userId: string) {\n    const user = this.usersService.findById(userId);\n    console.log('userId', userId);\n    return [\n      {\n        user,\n        title: 'Test title',\n        content: 'Test content',\n      },\n      {\n        user,\n        title: 'Test title1',\n        content: 'Test contenct2',\n      },\n    ];\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/UsersController.html":{"url":"controllers/UsersController.html","title":"controller - UsersController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  UsersController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/users.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                users\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    \n                                    Public\n                                createUsers\n                            \n                            \n                                    \n                                    \n                                    \n                                    \n                                    \n                                    Public\n                                getUsers\n                            \n                            \n                                    \n                                    Public\n                                patchUser\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        createUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    createUsers(createUserDto: CreateUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:79\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                createUserDto\n                                            \n                                                            CreateUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         string\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            \n                            \n                            \n                            \n                            Public\n                        getUsers\n                        \n                    \n                \n            \n            \n                \n                        \n                    getUsers(getUsersParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get('/:id?')@ApiOperation({summary: 'Fetches a list of registered users for the docs'})@ApiResponse({status: 200, description: 'Users fetched succesfully based on the query'})@ApiQuery({name: 'limit', type: 'number', required: false, description: 'The number of entries returned from query', example: 10})@ApiQuery({name: 'page', type: 'number', required: false, description: 'The position of the page we want to return', example: 1})\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:54\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUsersParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         any\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            \n                            Public\n                        patchUser\n                        \n                    \n                \n            \n            \n                \n                        \n                    patchUser(patchUserDto: PatchUserDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Patch()\n                \n            \n\n                    \n                        \n                            Defined in src/users/users.controller.ts:88\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                patchUserDto\n                                            \n                                                            PatchUserDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :         PatchUserDto\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n\n\n    \n        import {\n  Controller,\n  Get,\n  Post,\n  Patch,\n  Put,\n  Delete,\n  Param,\n  Query,\n  Body,\n  Headers,\n  Ip,\n  ParseIntPipe,\n  DefaultValuePipe,\n  ValidationPipe,\n} from '@nestjs/common';\nimport { CreateUserDto } from './dtos/create-user.dto';\nimport { GetUsersParamDto } from './dtos/get-users-params.dto';\nimport { get } from 'http';\nimport { isInstance } from 'class-validator';\nimport { PatchUserDto } from './dtos/patch-user.dto';\nimport { UsersService } from './providers/users.service';\nimport { ApiOperation, ApiQuery, ApiResponse, ApiTags } from '@nestjs/swagger';\n\n\n\n@Controller('users')\n@ApiTags('Users')\nexport class UsersController {\n  constructor(private readonly userService: UsersService) {}\n  @Get('/:id?')\n  @ApiOperation({\n    summary: \"Fetches a list of registered users for the docs\"\n  })\n  @ApiResponse({\n    status: 200,\n    description: 'Users fetched succesfully based on the query'\n  })\n  @ApiQuery({\n    name: 'limit',\n    type: 'number',\n    required: false,\n    description: \"The number of entries returned from query\",\n    example: 10\n  })\n  @ApiQuery({\n    name: 'page',\n    type: 'number',\n    required: false,\n    description: \"The position of the page we want to return\",\n    example: 1\n  })\n\n  public getUsers(\n    @Param() getUsersParamDto: GetUsersParamDto,\n    @Query('limit', new DefaultValuePipe(10), ParseIntPipe) limit: number,\n    @Query('page', new DefaultValuePipe(1), ParseIntPipe) page: number,\n  ) {\n    console.log('type of id,', getUsersParamDto instanceof GetUsersParamDto);\n    console.log('query,', limit);\n\n    const allusers = this.userService.findAll(\n      getUsersParamDto,\n      limit,\n      page,\n    )\n\n    return allusers;\n  }\n\n  @Post()\n  /**\n   * Creates a new user.\n   *\n   * @param {CreateUserDto} createUserDto - DTO containing required information for new user.\n   * @returns {String} - A message indicating the user was created.\n   * @throws {Error} - If the user could not be created.\n   */\n  public createUsers(@Body() createUserDto: CreateUserDto) {\n    // console.log('body', body)\n    const { firstName, lastName, email, password } = createUserDto;\n    console.log(firstName, lastName, email, password);\n\n    return 'You sent a POST request to users endpiint.';\n  }\n\n  @Patch()\n  public patchUser(@Body() patchUserDto: PatchUserDto) {\n    return patchUserDto;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/UsersModule.html":{"url":"modules/UsersModule.html","title":"module - UsersModule","body":"\n                   \n\n\n\n\n    Modules\n    UsersModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_providers\n\n\n\ncluster_UsersModule_exports\n\n\n\n\nUsersService \n\nUsersService \n\n\n\nUsersModule\n\nUsersModule\n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/users/users.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            UsersService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            UsersController\n                        \n                    \n                \n                \n                    Exports\n                    \n                        \n                            UsersService\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module, forwardRef } from '@nestjs/common';\nimport { UsersController } from './users.controller';\nimport { UsersService } from './providers/users.service';\nimport { AuthModule } from 'src/auth/auth.module';\n@Module({\n    controllers: [UsersController],\n    providers: [UsersService],\n    exports: [UsersService],\n    imports: [forwardRef(() => AuthModule)],\n})\nexport class UsersModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/UsersService.html":{"url":"injectables/UsersService.html","title":"injectable - UsersService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  UsersService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/users/providers/users.service.ts\n        \n\n\n            \n                Description\n            \n            \n                Business logic for users\n\n            \n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Public\n                                findAll\n                            \n                            \n                                    Public\n                                findById\n                            \n                            \n                                    Private\n                                isAuth\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(authService: AuthService)\n                    \n                \n                        \n                            \n                                Defined in src/users/providers/users.service.ts:8\n                            \n                        \n\n                \n                    \n                            Creates an instance of the UsersService.\nfor authentication checks. The forwardRef is used to avoid circular dependencies.\n\n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                                    Description\n                                            \n                                        \n                                        \n                                                \n                                                        authService\n                                                  \n                                                        \n                                                                        AuthService\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                        \n                                                                \nAn instance of the AuthService, to be used\nfor authentication checks. The forwardRef is used to avoid circular dependencies.\n\n\n                                                        \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                        \n                    findAll(getUsersParamDto: GetUsersParamDto, limit: number, page: number)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:29\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                getUsersParamDto\n                                            \n                                                            GetUsersParamDto\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                limit\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                        \n                                                page\n                                            \n                                                            number\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     {}\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Public\n                        findById\n                        \n                    \n                \n            \n            \n                \n                        \n                    findById(id: string)\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:46\n                        \n                    \n\n\n            \n                \n\n                            \n                                Parameters :\n                                \n                                \n                                    \n                                        \n                                            Name\n                                                Type\n                                            Optional\n                                        \n                                    \n                                    \n                                        \n                                                id\n                                            \n                                                            string\n                                            \n\n                                            \n                                                    No\n                                            \n\n\n                                        \n                                    \n                                \n                            \n                        \n                            Returns :     { id: number; firstName: string; email: string; message?: undefined; } | { message: string; id?: undefined; firstName?: undefined; email?: undefined; }\n\n                        \n                            \n                                \n                            \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                            Private\n                        isAuth\n                        \n                    \n                \n            \n            \n                \n                        \n                    isAuth()\n                \n            \n\n\n                    \n                        \n                            Defined in src/users/providers/users.service.ts:26\n                        \n                    \n\n\n            \n                \n                        Checks if the current user is authenticated by delegating the call\nto the AuthService's isAuth method.\n\n\n                        \n                            Returns :         any\n\n                        \n                            \n                                \nTrue if the user is authenticated, otherwise false.\n\n\n                            \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable, forwardRef, Inject } from '@nestjs/common';\nimport { GetUsersParamDto } from '../dtos/get-users-params.dto';\nimport { AuthService } from 'src/auth/providers/auth.service';\n\n\n/** Business logic for users */\n@Injectable()\nexport class UsersService {\n  /**\n   * Creates an instance of the UsersService.\n   *\n   * @param {AuthService} authService - An instance of the AuthService, to be used\n   * for authentication checks. The forwardRef is used to avoid circular dependencies.\n   */\n  constructor(\n    @Inject(forwardRef(() => AuthService))\n    private readonly authService: AuthService\n  ){}\n\n/**\n * Checks if the current user is authenticated by delegating the call\n * to the AuthService's isAuth method.\n *\n * @returns {boolean} - True if the user is authenticated, otherwise false.\n */\n  private isAuth(){\n    return this.authService.isAuth();\n  }\n  public findAll(\n    getUsersParamDto: GetUsersParamDto,\n    limit: number,\n    page: number,\n  ) {\n    if (this.isAuth()) return 'You are authenticated';\n    return [\n      {\n        firstName: 'John',\n        email: 'john@doe.com',\n      },\n      {\n        firstName: 'Jane',\n        email: 'jane@doe.com',\n      },\n    ];\n  }\n  public findById(id: string) {\n    if (this.authService.isAuth()){\n      return {\n        id: 12,\n        firstName: 'John',\n        email: 'john@doe.com',\n      }\n    } else {\n      return {\n        message: 'User is not authenticated'\n    } \n    }\n  }\n    \n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/auth/auth.controller.ts\n            \n            controller\n            AuthController\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/auth/providers/auth.service.ts\n            \n            injectable\n            AuthService\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                        src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/posts/dto/create-post-meta-options.dto.ts\n            \n            class\n            CreatePostMetaOptionsDto\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/posts/dto/create-post.dto.ts\n            \n            class\n            CreatePostDto\n            \n                0 %\n                (0/11)\n            \n        \n        \n            \n                \n                src/posts/dto/patch-post.dto.ts\n            \n            class\n            PatchPostDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/posts/posts.controller.ts\n            \n            controller\n            PostsController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/posts/providers/posts.service.ts\n            \n            injectable\n            PostsService\n            \n                0 %\n                (0/3)\n            \n        \n        \n            \n                \n                src/users/dtos/create-user.dto.ts\n            \n            class\n            CreateUserDto\n            \n                0 %\n                (0/5)\n            \n        \n        \n            \n                \n                src/users/dtos/get-users-params.dto.ts\n            \n            class\n            GetUsersParamDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/users/dtos/patch-user.dto.ts\n            \n            class\n            PatchUserDto\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/users/providers/users.service.ts\n            \n            injectable\n            UsersService\n            \n                60 %\n                (3/5)\n            \n        \n        \n            \n                \n                src/users/users.controller.ts\n            \n            controller\n            UsersController\n            \n                0 %\n                (0/4)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @compodoc/compodoc : ^1.1.23\n        \n            @nestjs/common : ^10.0.0\n        \n            @nestjs/core : ^10.0.0\n        \n            @nestjs/mapped-types : ^2.0.5\n        \n            @nestjs/platform-express : ^10.0.0\n        \n            @nestjs/swagger : ^7.3.0\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.14.1\n        \n            reflect-metadata : ^0.2.0\n        \n            rxjs : ^7.8.1\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/enumerations.html":{"url":"miscellaneous/enumerations.html","title":"miscellaneous-enumerations - enumerations","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Enumerations\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            postStatus   (src/.../postStatus.enum.ts)\n                        \n                        \n                            postType   (src/.../postType.enum.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/posts/enums/postStatus.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        postStatus\n                    \n                \n                        \n                            \n                                 DRAFT\n                            \n                        \n                        \n                            \n                                Value : draft\n                            \n                        \n                        \n                            \n                                 SCHEDULED\n                            \n                        \n                        \n                            \n                                Value : scheduled\n                            \n                        \n                        \n                            \n                                 REVIEW\n                            \n                        \n                        \n                            \n                                Value : review\n                            \n                        \n                        \n                            \n                                 PUBLISHED\n                            \n                        \n                        \n                            \n                                Value : published\n                            \n                        \n            \n        \n\n    src/posts/enums/postType.enum.ts\n    \n        \n            \n                \n                    \n                        \n                        postType\n                    \n                \n                        \n                            \n                                 POST\n                            \n                        \n                        \n                            \n                                Value : post\n                            \n                        \n                        \n                            \n                                 PAGE\n                            \n                        \n                        \n                            \n                                Value : page\n                            \n                        \n                        \n                            \n                                 STORY\n                            \n                        \n                        \n                            \n                                Value : story\n                            \n                        \n                        \n                            \n                                 SERIES\n                            \n                        \n                        \n                            \n                                Value : series\n                            \n                        \n            \n        \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nProject setup\nExample :$ npm installCompile and run the project\nExample :# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodRun tests\nExample :# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covDeployment\nWhen you're ready to deploy your NestJS application to production, there are some key steps you can take to ensure it runs as efficiently as possible. Check out the deployment documentation for more information.\nIf you are looking for a cloud-based platform to deploy your NestJS application, check out Mau, our official platform for deploying NestJS applications on AWS. Mau makes deployment straightforward and fast, requiring just a few simple steps:\nExample :$ npm install -g mau\n$ mau deployWith Mau, you can deploy your application in just a few clicks, allowing you to focus on building features rather than managing infrastructure.\nResources\nCheck out a few resources that may come in handy when working with NestJS:\n\nVisit the NestJS Documentation to learn more about the framework.\nFor questions and support, please visit our Discord channel.\nTo dive deeper and get more hands-on experience, check out our official video courses.\nDeploy your application to AWS with the help of NestJS Mau in just a few clicks.\nVisualize your application graph and interact with the NestJS application in real-time using NestJS Devtools.\nNeed help with your project (part-time to full-time)? Check out our official enterprise support.\nTo stay in the loop and get updates, follow us on X and LinkedIn.\nLooking for a job, or have a job to offer? Check out our official Jobs board.\n\nSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"license.html":{"url":"license.html","title":"getting-started - license","body":"\n                   \n\nMIT License\nCopyright (c) 2024 Viktor Maksimov\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\nThe above copyright notice and this permission notice shall be included in all\ncopies or substantial portions of the Software.\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE\nSOFTWARE.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        AuthModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        PostsModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        UsersModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\nLegend\n\n  Declarations\n\n  Module\n\n  Bootstrap\n\n  Providers\n\n  Exports\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AuthModule\n\n\n\ncluster_AuthModule_exports\n\n\n\ncluster_AuthModule_providers\n\n\n\ncluster_PostsModule\n\n\n\ncluster_PostsModule_providers\n\n\n\ncluster_UsersModule\n\n\n\ncluster_UsersModule_exports\n\n\n\ncluster_UsersModule_providers\n\n\n\n\nAuthModule\n\nAuthModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nAuthModule->AppModule\n\n\n\n\n\nAuthService \n\nAuthService \n\nAuthService  -->\n\nAuthModule->AuthService \n\n\n\n\n\nPostsModule\n\nPostsModule\n\nAppModule -->\n\nPostsModule->AppModule\n\n\n\n\n\nUsersModule\n\nUsersModule\n\nPostsModule -->\n\nUsersModule->PostsModule\n\n\n\nAppModule -->\n\nUsersModule->AppModule\n\n\n\n\n\nUsersService \n\nUsersService \n\nUsersService  -->\n\nUsersModule->UsersService \n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nAuthService\n\nAuthService\n\nAuthModule -->\n\nAuthService->AuthModule\n\n\n\n\n\nPostsService\n\nPostsService\n\nPostsModule -->\n\nPostsService->PostsModule\n\n\n\n\n\nUsersService\n\nUsersService\n\nUsersModule -->\n\nUsersService->UsersModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        4 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    4 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    4 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    6 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
